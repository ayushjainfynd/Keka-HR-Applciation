// index.js - System Generated File

// This file is automatically generated by the system.
// For any changes, please refer to the appropriate configuration or script.

// Import the required modules
import express from 'express';
import { fileURLToPath } from 'url';
import bodyParser from 'body-parser';
import path from 'path';
import { managerDataHandler } from './submodules/managerData.js';
import { syncKekaDataHandler } from './submodules/syncKekaData.js'
import { frontPage } from "./submodules/frontPage.js";
import { getManagersListHandler } from './submodules/getAllManagersList.js';
import { getBusinessUnitsHandler } from './submodules/getAllBusinessUnitList.js';
import { getDepartmentsHandler } from './submodules/getAllDepartmentList.js';
import { getAllConsultantEmployees } from './submodules/getAllConsultantEmployees.js';
import { filteredEmployeeDataHandler } from './submodules/fetchFilteredEmployeeData.js';
import { getOrgChartHandler } from './submodules/getOrgChartHandler.js';

// Define the port to listen on
const PORT = process.env.BOLT_APPLICATION_PORT || 3000;
const DEV_MODE = process.env.BOLT_DEVELOPMENT_MODE || false;

// Initialize the express application
const app = express();
// parse application/x-www-form-urlencoded
app.use(bodyParser.urlencoded({ extended: false }))
// parse application/json
app.use(bodyParser.json())
// parse text/plain
app.use(bodyParser.text())
// parse raw data
app.use(bodyParser.raw())

// Define __dirname for ES modules
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));

// Use the request handler function for all routes
app.all('/', frontPage);
app.all('/get-sync-data', syncKekaDataHandler);
app.all('/get-manager', managerDataHandler);
app.all('/get-all-managers-list',getManagersListHandler);
app.all('/get-all-business-units', getBusinessUnitsHandler);
app.all('/get-all-departments', getDepartmentsHandler);
app.all('/get-consultant-employees', getAllConsultantEmployees);
app.all('/get-filtered-employees', filteredEmployeeDataHandler);
app.all('/get-org-chart',getOrgChartHandler);

// Start the server and listen on the defined port
app.listen(PORT, () => {
  if (DEV_MODE) {
    console.log(
      `Listening for events on port ${PORT} in development mode`
    );
  } else {
    console.log(
      `Listening for events`
    );
  }
});
